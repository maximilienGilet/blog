---
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import GitHub from "@components/icons/GitHub.astro";
import ExternalLink from "@components/icons/ExternalLink.astro";
import Search from "@components/icons/Search.astro";
import Clear from "@components/icons/Clear.astro";
import Pagination from "@components/Pagination.astro";

const projects = await getCollection("projets");

// Sort by date
const sortedProjects = projects.sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

// Get search query from URL
const searchQuery = Astro.url.searchParams.get("q")?.toLowerCase() || "";

// Filter projects based on search query
const filteredProjects = searchQuery
  ? sortedProjects.filter(
      project =>
        project.data.title.toLowerCase().includes(searchQuery) ||
        project.data.description.toLowerCase().includes(searchQuery)
    )
  : sortedProjects;

// Pagination
const projectsPerPage = 6;
const currentPage = Number(Astro.url.searchParams.get("page")) || 1;
const totalPages = Math.ceil(filteredProjects.length / projectsPerPage);

// Ensure current page is valid
const validPage = Math.min(Math.max(1, currentPage), totalPages);

// Get projects for current page
const startIndex = (validPage - 1) * projectsPerPage;
const endIndex = startIndex + projectsPerPage;
const paginatedProjects = filteredProjects.slice(startIndex, endIndex);

// Build pagination URLs
const searchParam = searchQuery ? `&q=${searchQuery}` : "";
const prevUrl = `/projets${validPage - 1 !== 1 ? `?page=${validPage - 1}${searchParam}` : searchParam ? `?${searchParam}` : ""}`;
const nextUrl = `/projets?page=${validPage + 1}${searchParam}`;
---

<Layout title="Projets - Maximilien Gilet">
  <Header activeNav="projets" />
  <main id="main-content">
    <section class="mx-auto max-w-3xl px-4">
      <h1 class="text-3xl font-semibold">Mes projets</h1>
      <p class="text-skin-muted mt-4">
        Une sélection de mes projets personnels et professionnels.
      </p>

      <form class="mt-8" action="/projets" method="get">
        <label class="relative block">
          <span
            class="absolute inset-y-0 left-0 flex items-center pl-2 opacity-75"
          >
            <Search className="scale-125 sm:scale-100" />
            <span class="sr-only">Rechercher</span>
          </span>
          <input
            class="input w-full pl-10 pr-3 placeholder:italic placeholder:text-opacity-75"
            placeholder="Rechercher..."
            type="text"
            name="q"
            value={searchQuery}
          />
          {
            searchQuery && (
              <a
                href="/projets"
                class="absolute inset-y-0 right-0 flex items-center pr-3 text-skin-base hover:text-skin-accent"
                title="Effacer la recherche"
              >
                <Clear class="h-4 w-4" />
              </a>
            )
          }
        </label>
      </form>

      {
        searchQuery && (
          <div class="mt-8">
            {filteredProjects.length}
            {filteredProjects.length === 1 ? " résultat " : " résultats "}
            pour '{searchQuery}'
          </div>
        )
      }

      <ul class="mt-8 space-y-8 pb-8">
        {
          paginatedProjects.map(project => (
            <li class="shadow-fat hover:shadow-fat-accent group rounded-lg border-2 border-skin-line p-6 transition-all hover:border-skin-accent">
              <article>
                <a href={`/projets/${project.slug}`} class="block">
                  {project.data.image && (
                    <img
                      src={"/" + project.data.image}
                      alt={project.data.title}
                      class="mb-4 max-h-96 w-full rounded-lg object-cover"
                    />
                  )}
                  <div class="flex items-start justify-between">
                    <div>
                      <h2 class="text-xl font-semibold group-hover:text-skin-accent">
                        {project.data.title}
                      </h2>
                      <p class="text-skin-muted mt-2">
                        {project.data.description}
                      </p>
                    </div>
                    <div class="flex items-center gap-3">
                      {project.data.github && (
                        <a
                          href={project.data.github}
                          target="_blank"
                          rel="noopener noreferrer"
                          class="hover:text-skin-accent"
                          title="Voir sur GitHub"
                        >
                          <GitHub class="h-6 w-6" />
                        </a>
                      )}
                      {project.data.link && (
                        <a
                          href={project.data.link}
                          target="_blank"
                          rel="noopener noreferrer"
                          class="hover:text-skin-accent"
                          title="Voir le projet"
                        >
                          <ExternalLink class="h-6 w-6" />
                        </a>
                      )}
                    </div>
                  </div>
                </a>
              </article>
            </li>
          ))
        }
      </ul>

      <div class="pb-8">
        <Pagination
          currentPage={validPage}
          totalPages={totalPages}
          prevUrl={prevUrl}
          nextUrl={nextUrl}
        />
      </div>
    </section>
  </main>
  <Footer noMarginTop={totalPages > 1} />
</Layout>
